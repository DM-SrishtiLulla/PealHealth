type PealArticle @model {
  id: ID!
  Title: String!
  ArticleText: String
  Author: String
  HealthTags: [String]
  ImageLink: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Identity @model {
  id: ID!
  IdentityText: String!
  ImageLink: String
  IdentityUsers: [UserIdentities] @connection(keyName: "byIdentity", fields: ["id"])
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Goal @model {
  id: ID!
  GoalText: String!
  ImageLink: String
  GoalUsers: [UserGoals] @connection(keyName: "byGoal", fields: ["id"])
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  Insights: [Insight] @connection(keyName: "byGoalI", fields: ["id"])
}

type Interest @model {
  id: ID!
  InterestText: String!
  ImageLink: String
  InterestUsers: [UserInterests] @connection(keyName: "byInterest", fields: ["id"])
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type UserIdentities 
  @model(queries: null)
  @key(name: "byIdentity", fields: ["identityID", "userID"])
  @key(name: "byUserId", fields: ["userID", "identityID"])
{
  id: ID!
  identityID: ID!
  userID: ID!
  identity: Identity! @connection(fields: ["identityID"])
  user: UserInfo! @connection(fields: ["userID"])
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type UserGoals 
  @model(queries: null)
  @key(fields: ["userID", "goalID"])
  @key(name: "byGoal", fields: ["goalID", "userID"])
  @key(name: "byUserGo", fields: ["userID", "goalID"])
{
  goalID: ID!
  userID: ID!
  goal: Goal! @connection(fields: ["goalID"])
  user: UserInfo! @connection(fields: ["userID"])
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type UserInterests 
  @model(queries: null)
  @key(name: "byInterest", fields: ["interestID", "userID"])
  @key(name: "byUserIn", fields: ["userID", "interestID"])
{
  id: ID!
  interestID: ID!
  userID: ID!
  interest: Interest! @connection(fields: ["interestID"])
  user: UserInfo! @connection(fields: ["userID"])
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type UserInfo @model {
  id: ID!
  Username: String!
  Sub: String!
  Identities: [UserIdentities] @connection(keyName: "byUserId", fields: ["id"]) 
  Goals: [UserGoals] @connection(keyName: "byUserGo", fields: ["id"]) 
  Interests: [UserInterests] @connection(keyName: "byUserIn", fields: ["id"]) 
  Insights: [UserInsights] @connection(keyName: "byUserIns", fields: ["id"]) 
  ProfileImage: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Insight 
  @model 
  @key(name: "byGoalI", fields: ["goalID", "id"]) { 
  id: ID!
  InsightUsers: [UserInsights] @connection(keyName: "byInsight", fields: ["id"])
  InsightText: String!
  ImageLink: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  goalID: ID!
}

type UserInsights @model
  @key(fields: ["userID", "insightID"])
  @key(name: "byInsight", fields: ["insightID", "userID"])
  @key(name: "byUserIns", fields: ["userID", "insightID"])
{
  insightID: ID!
  userID: ID!
  insight: Insight! @connection(fields: ["insightID"])
  user: UserInfo! @connection(fields: ["userID"])
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  status: String!
}


type Post @model {
  id: ID!
  PostText: String!
  ImageLink: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}
